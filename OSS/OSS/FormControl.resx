<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>